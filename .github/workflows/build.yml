name: Build

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron:  '0 0 */2 * *'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
#          - { name: i686, bits: 32 }
          - { name: x86_64, bits: 64 }
        build_type:
          - release
          - debug
    steps:
      - name: Checkout build sources
        uses: actions/checkout@v2

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: >-
            make
            mingw-w64-x86_64-gcc

      - name: Dump build environment
        shell: msys2 {0}
        run: |
          echo - Windows Environent Variable
          set
          echo - Bash Environent Variable
          export

      - name: Checkout sources
        run: |
          git clone --depth 1 https://github.com/bkaradzic/bgfx.git
          git clone --depth 1 https://github.com/bkaradzic/bx.git
          git clone --depth 1 https://github.com/bkaradzic/bimg.git

      - name: Cache build files
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ hashFiles('lockfile.txt') }}-${{matrix.build_type}}-${{matrix.platform.name}}
          path: |
            */.build

      - name: Compile BX
        shell: msys2 {0}
        env:
          MINGW: /mingw64/
        run: |
          cd bx
          make mingw-gcc-${{matrix.build_type}}${{matrix.platform.bits}}

      - name: Compile BIMG
        shell: msys2 {0}
        env:
          MINGW: /mingw64/
        run: |
          cd bimg
          make mingw-gcc-${{matrix.build_type}}${{matrix.platform.bits}}

      - name: Compile BGFX
        shell: msys2 {0}
        env:
          MINGW: /mingw64/
        run: |
          cd bgfx
          make mingw-gcc-${{matrix.build_type}}${{matrix.platform.bits}}

      - name: Upload executable artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.build_type}}-${{matrix.platform.name}}-executable
          path: '*/.build/win64_mingw-gcc/bin/*.exe'

      - name: Upload static library artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.build_type}}-${{matrix.platform.name}}-staticlib
          path: '*/.build/win64_mingw-gcc/bin/*.a'

      - name: Upload object artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.build_type}}-${{matrix.platform.name}}-object
          path: '*/.build/win64_mingw-gcc/objs/'

  release:
    runs-on: ubuntu-latest
    needs:
      - build
    if: '!cancelled()'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2.0.10
        with:
          path: /artifacts

      - name: Get date
        run: echo "DATE=$(date -u +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: Create tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          CUSTOM_TAG: ${{ format('build-{0}', github.run_number) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        uses: softprops/action-gh-release@v0.1.13
        with:
          name: "${{ format('{0} #{1}', env.DATE, github.run_number) }}"
          tag_name: ${{ format('build-{0}', github.run_number) }}
          files: /artifacts
          body: |
            ${{ format('Auto-build #{1} at {0} UTC', env.DATE, github.run_number) }}

      - name: Delete older releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 30
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
